{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/md.transition-90b00ffe.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiC","file":"md-transition-90b00ffe-js-es2015.js","sourcesContent":["const mdTransitionAnimation = (AnimationC, _, opts) => {\n    const TRANSLATEY = 'translateY';\n    const OFF_BOTTOM = '40px';\n    const CENTER = '0px';\n    const backDirection = (opts.direction === 'back');\n    const enteringEl = opts.enteringEl;\n    const leavingEl = opts.leavingEl;\n    const ionPageElement = getIonPageElement(enteringEl);\n    const enteringToolbarEle = ionPageElement.querySelector('ion-toolbar');\n    const rootTransition = new AnimationC();\n    rootTransition\n        .addElement(ionPageElement)\n        .beforeRemoveClass('ion-page-invisible');\n    // animate the component itself\n    if (backDirection) {\n        rootTransition\n            .duration(opts.duration || 200)\n            .easing('cubic-bezier(0.47,0,0.745,0.715)');\n    }\n    else {\n        rootTransition\n            .duration(opts.duration || 280)\n            .easing('cubic-bezier(0.36,0.66,0.04,1)')\n            .fromTo(TRANSLATEY, OFF_BOTTOM, CENTER, true)\n            .fromTo('opacity', 0.01, 1, true);\n    }\n    // Animate toolbar if it's there\n    if (enteringToolbarEle) {\n        const enteringToolBar = new AnimationC();\n        enteringToolBar.addElement(enteringToolbarEle);\n        rootTransition.add(enteringToolBar);\n    }\n    // setup leaving view\n    if (leavingEl && backDirection) {\n        // leaving content\n        rootTransition\n            .duration(opts.duration || 200)\n            .easing('cubic-bezier(0.47,0,0.745,0.715)');\n        const leavingPage = new AnimationC();\n        leavingPage\n            .addElement(getIonPageElement(leavingEl))\n            .fromTo(TRANSLATEY, CENTER, OFF_BOTTOM)\n            .fromTo('opacity', 1, 0);\n        rootTransition.add(leavingPage);\n    }\n    return Promise.resolve(rootTransition);\n};\nconst getIonPageElement = (element) => {\n    if (element.classList.contains('ion-page')) {\n        return element;\n    }\n    const ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');\n    if (ionPage) {\n        return ionPage;\n    }\n    // idk, return the original element so at least something animates and we don't have a null pointer\n    return element;\n};\n\nexport { mdTransitionAnimation };\n"],"sourceRoot":""}