{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-content color=\\\"secondary\\\">\\n  <ion-card class=\\\"login\\\" color=\\\"primary\\\" padding>\\n      <ion-img class=\\\"img-thumbnail-size img-horizontal-center\\\" \\n      src=\\\"../../assets/img/tnc.png\\\" alt=\\\"TNC logo\\\" padding></ion-img>\\n\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <!-- <ion-item>      \\n            <ion-label position=\\\"stacked\\\">Username</ion-label>\\n            <ion-input type=\\\"text\\\"\\n              formControlName=\\\"username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\">\\n            </ion-input>\\n          </ion-item>\\n\\n          <ion-row *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n          </ion-row> -->\\n\\n          <ion-item>      \\n            <ion-label position=\\\"stacked\\\">Email</ion-label>\\n            <ion-input type=\\\"text\\\"\\n              formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n            </ion-input>\\n          </ion-item>\\n\\n          <ion-row *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n          </ion-row>\\n\\n          <ion-item>      \\n              <ion-label position=\\\"stacked\\\">Password</ion-label>\\n            <ion-input type=\\\"password\\\"\\n              formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\n            </ion-input>\\n          </ion-item>\\n\\n          <ion-row *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n          </ion-row>\\n\\n          <div class=\\\"frgt-pw\\\" text-right><!-- TODO create help -->\\n           <a routerLink=\\\"/help\\\" style=\\\"color:#a7a7a7;\\\">Forgot Password?</a>\\n          </div>\\n\\n          <div text-center>\\n            <ion-button type=\\\"submit\\\">\\n                <ion-spinner name=\\\"lines\\\" *ngIf=\\\"loading\\\"></ion-spinner>\\n                LOGIN\\n            </ion-button>\\n          </div>\\n\\n          <div class=\\\"signup\\\" text-center><!-- TODO create help -->\\n            <p>Don't have an account yet? <a routerLink=\\\"/register\\\" style=\\\"color:#f26925;\\\">Sign Up</a> </p>\\n           </div>\\n      </form>\\n  </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"ion-button {\\n  --background: #f26925;\\n  --color: #fff;\\n  width: 50%;\\n  margin-top: 50px; }\\n\\n.frgt-pw {\\n  margin-top: 5px; }\\n\\nion-item {\\n  --ion-background-color: transparent;\\n  color: #ffffff; }\\n\\n.login {\\n  margin: 0;\\n  position: absolute;\\n  width: 90%;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%); }\\n\\n.ion-col {\\n  color: #ffffff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXN0ZXJ5aGFuL0RldmVsb3BtZW50L1ROQ19EcmFnb25fLUZyb250RW5kLS9zcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFhO0VBQ2IsYUFBUTtFQUNSLFVBQVU7RUFDVixnQkFBZ0IsRUFBQTs7QUFJcEI7RUFDSSxlQUFlLEVBQUE7O0FBR25CO0VBQ0ksbUNBQXVCO0VBQ3ZCLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixRQUFRO0VBQ1IsU0FBUztFQUVULHdDQUFnQztVQUFoQyxnQ0FBZ0MsRUFBQTs7QUFHcEM7RUFDSSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tYnV0dG9ue1xuICAgIC0tYmFja2dyb3VuZDogI2YyNjkyNTtcbiAgICAtLWNvbG9yOiAjZmZmO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBcbn1cblxuLmZyZ3QtcHd7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG5pb24taXRlbSB7XG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5sb2dpbntcbiAgICBtYXJnaW46IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiA5MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuLmlvbi1jb2x7XG4gICAgY29sb3I6ICNmZmZmZmY7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../loginExtras/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\nexport class LoginPage implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            // username: ['', Validators.required],\n            password: ['', Validators.required],\n            email: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n          console.log('ERROR: Form not valid');\n\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    console.log('ERROR: ' + JSON.stringify(error));\n                    this.loading = false;\n                });\n    }\n}"],"sourceRoot":""}