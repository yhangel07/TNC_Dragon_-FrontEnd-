{"version":3,"sources":["./src/app/register/register.page.html","./src/app/register/register.module.ts","./src/app/register/register.page.scss","./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/login\\\" text=\\\"Cancel\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>register</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content color=\\\"dark\\\">\\r\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <ion-row>\\r\\n      <ion-item>\\r\\n          <ion-input type=\\\"text\\\" placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" \\r\\n            class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" >\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-item>\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Last Name\\\"\\r\\n          formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" >\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-item>\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"User ID\\\"\\r\\n          formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" >\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-item>\\r\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n          formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\r\\n            <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\">\\r\\n            <ion-spinner name=\\\"lines\\\" *ngIf=\\\"loading\\\"></ion-spinner>\\r\\n            REGISTER\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n    </ion-row>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule }    from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","module.exports = \"ion-button {\\n  --background: #f26925;\\n  --color: #fff;\\n}\\n\\nion-item {\\n  border-color: rgba(0, 0, 0, 0);\\n  color: white;\\n  --background: #222428;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvYzpcXFVzZXJzXFxSaWRhIExlZVxcRGVza3RvcFxcVE5DIEFwcHNcXGlvbmljXFx0bmNhcHAvc3JjXFxhcHBcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0VBQ0EsYUFBQTtBQ0NKOztBREVBO0VBQ0ksOEJBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1idXR0b257XHJcbiAgICAtLWJhY2tncm91bmQ6ICNmMjY5MjU7XHJcbiAgICAtLWNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG5pb24taXRlbXtcclxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcclxuICAgIGNvbG9yOiB3aGl0ZTsgXHJcbiAgICAtLWJhY2tncm91bmQ6ICMyMjI0Mjg7XHJcbn0iLCJpb24tYnV0dG9uIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZjI2OTI1O1xuICAtLWNvbG9yOiAjZmZmO1xufVxuXG5pb24taXRlbSB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcbiAgY29sb3I6IHdoaXRlO1xuICAtLWJhY2tncm91bmQ6ICMyMjI0Mjg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../loginExtras/user.service';\r\nimport { AuthenticationService } from '../loginExtras/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private userService: UserService\r\n) { \r\n    // redirect to home if already logged in\r\n    if (this.authenticationService.currentUserValue) { \r\n        this.router.navigate(['/']);\r\n    }\r\n}\r\n\r\nngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n        firstName: ['', Validators.required],\r\n        lastName: ['', Validators.required],\r\n        username: ['', Validators.required],\r\n        password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n}\r\n\r\n// convenience getter for easy access to form fields\r\nget f() { return this.registerForm.controls; }\r\n\r\nonSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n        console.log('ERROR: form not valid');\r\n        return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.userService.register(this.registerForm.value)\r\n        .pipe(first())\r\n        .subscribe(\r\n            data => {\r\n                // this.alertService.success('Registration successful', true); TODO Change to alert\r\n                this.router.navigate(['/login']);\r\n            },\r\n            error => {\r\n                // this.alertService.error(error); TODO change to alert\r\n                \r\n                console.log('ERROR: ' + JSON.stringify(error));\r\n                this.loading = false;\r\n            });\r\n  }\r\n}"],"sourceRoot":""}